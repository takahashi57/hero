(()=>{"use strict";var t;!function(t){t[t.NONE=0]="NONE",t[t.ERROR=1]="ERROR",t[t.WARN=2]="WARN",t[t.INFO=3]="INFO",t[t.DEBUG=4]="DEBUG"}(t||(t={}));let e=t.DEBUG;const n={LogLevel:t,setLogLevel:function(t){e=t},info:function(e,...n){t.INFO},debug:function(e,...n){t.DEBUG},warn:function(e,...n){t.WARN},error:function(e,n,...o){t.ERROR},groupStart:function(e,n=!1){t.DEBUG},groupEnd:function(){t.DEBUG}},o="callHistory";function r(t){try{return new URL(t).hostname}catch(t){return n.error("URL解析エラー:",t),null}}function i(t){try{return new URL(t).pathname}catch(t){return n.error("URL解析エラー:",t),null}}function a(t){try{const e=new URL(t),n=e.hostname;return`${n}${e.pathname.replace(/\/[^\/]*$/,"/")}`}catch(t){return n.error("URL解析エラー:",t),null}}const c={getDomain:r,getPath:i,getDomainPathKey:a,getCurrentDomainPathKey:function(){return a(window.location.href)||""},isFromDomain:function(t,e){const n=r(t);return!!n&&(n===e||n.endsWith(e))},containsPath:function(t,e){const n=i(t);return!!n&&("string"==typeof e?n.includes(e):e.test(n))}};async function s(){try{const t=await u(),e=window.location.pathname;return n.debug(`問い合わせ一覧ページ判定: パス=${e}`),n.debug(`CMS設定のパス=${t?.path}`),e===t?.path}catch(t){return n.error("パス確認エラー:",t),!1}}function l(){try{const t=window.location.pathname;return t.includes("/detail.php")||t.includes("/detail")}catch(t){return n.error("パス確認エラー:",t),!1}}async function u(){try{const t=c.getCurrentDomainPathKey();return new Promise((e=>{chrome.storage.sync.get(["cmsSettings"],(o=>{if(chrome.runtime.lastError)return n.error("設定の取得エラー:",chrome.runtime.lastError),void e(null);const r=o.cmsSettings;if(!r||!r.targets)return n.debug("CMS設定が見つかりません"),void e(null);n.debug(`CMS設定のターゲット数: ${r.targets.length}`),n.debug(`現在のドメイン+パス: ${t}`),n.debug(`CMS設定のドメイン+パス: ${r.targets.map((t=>`${t.domain}${t.path}`))}`);const i=r.targets.find((e=>`${e.domain}${e.path}`===t));i?(n.debug(`ドメイン ${t} のCMS設定を使用します`),e(i)):(n.debug(`ドメイン ${t} のCMS設定が見つかりません`),e(null))}))}))}catch(t){return n.error("CMS設定取得エラー:",t),null}}function d(){try{const t=document.querySelector("table.table, table.detail-table, .inquiry-detail table, .detail table");if(t){const e=t.querySelectorAll("tr");for(let t=0;t<e.length;t++){const o=e[t],r=o.querySelector("th");if(r&&(r.textContent?.includes("電話番号")||r.textContent?.includes("TEL")||r.textContent?.includes("携帯")||r.textContent?.includes("連絡先"))){const t=o.querySelector("td");if(t&&t.textContent){const e=t.textContent.trim().replace(/[\s\-\(\)]/g,"");return n.info(`電話番号を抽出しました: ${e}`),e}}}}const e=document.querySelectorAll("dl");for(const t of Array.from(e)){const e=t.querySelectorAll("dt");for(let t=0;t<e.length;t++){const o=e[t];if(o.textContent?.includes("電話番号")||o.textContent?.includes("TEL")||o.textContent?.includes("携帯")||o.textContent?.includes("連絡先")){const t=o.nextElementSibling;if(t&&"DD"===t.tagName&&t.textContent){const e=t.textContent.trim().replace(/[\s\-\(\)]/g,"");return n.info(`電話番号を定義リストから抽出しました: ${e}`),e}}}}const o=document.querySelectorAll("label");for(const t of Array.from(o))if(t.textContent?.includes("電話番号")||t.textContent?.includes("TEL")||t.textContent?.includes("携帯")||t.textContent?.includes("連絡先")){const e=t.getAttribute("for");if(e){const t=document.getElementById(e);if(t&&t instanceof HTMLInputElement&&t.value){const e=t.value.trim().replace(/[\s\-\(\)]/g,"");return n.info(`電話番号を入力フィールドから抽出しました: ${e}`),e}}const o=t.querySelector("input")||t.nextElementSibling?.querySelector("input");if(o&&o instanceof HTMLInputElement&&o.value){const t=o.value.trim().replace(/[\s\-\(\)]/g,"");return n.info(`電話番号を入力フィールドから抽出しました: ${t}`),t}}const r=document.querySelectorAll(".phone, .tel, .telephone, .mobile, .phone-number");for(const t of Array.from(r))if(t.textContent){const e=t.textContent.trim().replace(/[\s\-\(\)]/g,"");return n.info(`電話番号をクラス付き要素から抽出しました: ${e}`),e}const i=document.body.innerText,a=[/0\d{1,4}[-(]?\d{1,4}[-)]?\d{3,4}/g,/0\d{9,10}/g,/\+\d{1,3}[-\s]?\d{1,4}[-\s]?\d{1,4}[-\s]?\d{1,4}/g];for(const t of a){const e=i.match(t);if(e&&e.length>0){const t=e[0].replace(/[\s\-\(\)]/g,"");return n.info(`電話番号をテキストパターンから抽出しました: ${t}`),t}}if(window.location.hostname.includes("brand-satei.me")){const t=['.client-detail .detail-row:contains("連絡先") .value',".client-info .phone-value","#customer-info .tel-number",".customer-detail .phone"],e=(t,e)=>{const n=t.split(":contains")[0],o=document.querySelectorAll(n);return Array.from(o).filter((t=>t.textContent?.includes(e)))};for(const o of t)if(o.includes(":contains")){const[t,r]=o.split(":contains("),i=e(t,r.replace(")","").replace(/"/g,""));if(i.length>0)for(const t of i){const e=t.nextElementSibling;if(e&&e.textContent){const t=e.textContent.trim().replace(/[\s\-\(\)]/g,"");return n.info(`電話番号をブランド査定特定セレクタから抽出しました: ${t}`),t}const o=t.querySelectorAll("*");for(const t of Array.from(o))if(t.textContent&&/\d/.test(t.textContent)){const e=t.textContent.trim().replace(/[\s\-\(\)]/g,"");return n.info(`電話番号をブランド査定特定子要素から抽出しました: ${e}`),e}}}else{const t=document.querySelector(o);if(t&&t.textContent){const e=t.textContent.trim().replace(/[\s\-\(\)]/g,"");return n.info(`電話番号をブランド査定セレクタから抽出しました: ${e}`),e}}const o=[],r=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,null);let i;for(;i=r.nextNode();){const t=i.textContent?.trim();t&&/\d{10,11}/.test(t.replace(/[\s\-\(\)]/g,""))&&o.push(t)}if(o.length>0)for(const t of o){const e=t.replace(/[\s\-\(\)]/g,"");if(/^0\d{9,10}$/.test(e))return n.info(`電話番号をツリーウォーカーから抽出しました: ${e}`),e}}return n.warn("電話番号が見つかりませんでした"),null}catch(t){return n.error("電話番号抽出エラー:",t),null}}async function f(t=0){try{if(!l())return n.warn("問い合わせ詳細ページではありません"),!1;n.info("問い合わせ詳細ページを処理します（リトライ回数: "+t+"）");const e=d();if(!function(t){return!!t&&/^\d{7,15}$/.test(t)}(e))return t<3?(n.info("電話番号が見つかりませんでした。リトライします..."),new Promise((e=>{setTimeout((()=>{e(f(t+1))}),1e3)}))):(n.warn("最大リトライ回数に達しました。有効な電話番号が見つかりませんでした"),!1);const o=await async function(t){return new Promise((e=>{try{chrome.storage.local.get(["calledPhoneNumbers"],(o=>{const r=(o.calledPhoneNumbers||{})[t];if(!r)return void e(!1);const i=Date.now()-r,a=i<432e5;a&&n.info(`電話番号 ${t} は ${Math.floor(i/36e5)} 時間前に発信済みです`),e(a)}))}catch(t){n.error("発信履歴チェックエラー:",t),e(!1)}}))}(e);return o?(n.info(`電話番号 ${e} は最近発信済みのため、発信をスキップします`),!0):(n.info(`電話番号 ${e} で発信アクションを実行します`),new Promise((o=>{chrome.storage.sync.get(["autoCallEnabled"],(r=>{const i=!0===r.autoCallEnabled,a=setTimeout((()=>{n.warn("メッセージ送信がタイムアウトしました。リトライします"),t<3?f(t+1).then((t=>o(t))):(n.error("最大リトライ回数に達しました"),o(!1))}),5e3);chrome.runtime.sendMessage({action:"openSokuComTab",phoneNumber:e,autoCall:i},(async t=>{if(clearTimeout(a),chrome.runtime.lastError)return n.error("メッセージ送信エラー:",chrome.runtime.lastError),void o(!1);n.info("発信アクション応答:",t),t&&"success"===t.status?(await async function(t){try{const e=t.replace(/[\s\-\(\)]/g,""),o=await m(),r=c.getCurrentDomainPathKey(),i=o[r]||[];if(!o)return void n.warn("コール履歴が取得できませんでした");{const t=i.find((t=>t.phoneNumber===e));t?(t.called=!0,n.info(`電話番号 ${e} のコール履歴を更新しました`)):n.info(`電話番号 ${e} のコール履歴に新しいレコードを追加しました`),await h(r,i)}}catch(t){n.error("発信履歴保存エラー:",t)}}(e),o(!0)):o(!!t&&"error"!==t.status)}))}))})))}catch(t){return n.error("問い合わせ詳細処理エラー:",t),!1}}async function m(){return new Promise((async t=>{chrome.storage.sync.get([o],(e=>{if(chrome.runtime.lastError)return n.error("コール履歴の取得エラー:",chrome.runtime.lastError),void t({});const r=e[o]||{};t(r)}))}))}async function h(t,e){return new Promise((r=>{m().then((i=>{n.debug("コール履歴をこの内容に更新します:",e),i[t]=e,chrome.storage.sync.set({[o]:i},(()=>{chrome.runtime.lastError?n.error("コール履歴の保存エラー:",chrome.runtime.lastError):n.info(`ドメイン ${t} のコール履歴を更新しました（${e.length}件）`),r()}))}))}))}async function g(){const t=[];c.getCurrentDomainPathKey();try{const e=await async function(){try{const t=await u(),e=window.location.hostname,o="localhost"===e||e.includes("localhost");return n.debug(`テーブルセレクタ取得: ホスト名=${e}, localhost=${o}`),t?(n.info(`カスタムセレクタを使用: ${t.selector}`),t.selector):o?(n.info("ローカル環境向けのデフォルトセレクタを使用: div.inquiry-list > table"),"div.inquiry-list > table"):(n.info("デフォルトのテーブルセレクタを使用: form#form_list > table"),"form#form_list > table")}catch(t){return n.error("テーブルセレクタ取得エラー:",t),"table"}}();n.debug(`テーブルセレクタ: ${e}`);const o=document.querySelector(e);if(o){const e=o.querySelectorAll("tr");n.debug(`テーブル行数: ${e.length}`);for(let n=1;n<e.length;n++){const o=e[n],r=o.querySelectorAll("td");if(r.length>=5){const e=r[0].textContent?.trim()||"",n=r[1].textContent?.trim()||"",i=r[2].textContent?.trim()||"",a=r[4],c=a.querySelector('a[href*="detail.php"]')||a.querySelector('a[href*="detail"]'),s=c?c.getAttribute("href"):"",l=s?/id=([^&]+)/.exec(s):null;let u=l?l[1]:"";!u&&s&&(u=s);const d=o.classList.contains("new")||o.classList.contains("new-inquiry")||"#fffceb"===o.style.backgroundColor;u&&t.push({id:u,date:e,name:n,content:i,isNew:d,phoneNumber:"",called:!1,status:"未対応"})}}}else{n.error(`テーブル要素が見つかりません: ${e}`);const t=["table",".inquiry-list table",".data-table","#inquiry-table","div > table"];let o=null;for(const e of t){const t=document.querySelector(e);if(t){n.info(`代替セレクタでテーブル要素を発見: ${e}`),o=t;break}}if(!o)return[];const r=o.querySelectorAll("tr");n.debug(`代替セレクタで発見したテーブル行数: ${r.length}`)}n.info(`${t.length}件のお問い合わせを抽出しました`);const r=await m(),i=c.getCurrentDomainPathKey(),a=r[i]||[];return n.info(`コール履歴を取得しました: ${a.length}件`,a),0===a.length?(n.info("コール履歴が存在しないため、初期化します"),t.forEach((t=>{t.called=!0,t.phoneNumber="",t.status="未対応"})),await h(i,t)):t.forEach((t=>{const e=a.find((e=>e.id===t.id));e&&(t.called=e.called)})),t}catch(t){return n.error("問い合わせデータ抽出エラー:",t),[]}}async function w(){try{if(!await s()){const t=await u();return n.info("問い合わせ一覧ページではありません。一覧ページに移動します。"),n.info("現在のURL:",window.location.href),n.info("移動先URL:",window.location.origin+t?.path),window.location.href=window.location.origin+t?.path,!1}const t=await g();if(0===t.length)return n.info("問い合わせが見つかりませんでした"),!1;n.info("新着問い合わせをチェックします:",t);const e=await m(),o=c.getCurrentDomainPathKey(),r=e[o]||[];n.info(`コール履歴を取得しました: ${r.length}件`,r),t.forEach((t=>{const e=r.find((e=>e.id===t.id));t.called=!!e&&e.called}));const i=t.filter((t=>!t.called));if(n.info(`未コールの新着問い合わせ（コール履歴）: ${i.length}件`,i),0===i.length)return!1;const a=i[0];n.info("未コールの問い合わせを処理します:",a);const l=`a[href*="detail.php?id=${a.id}"], a[href*="detail.html?id=${a.id}"]`,d=document.querySelector(l);return d&&d instanceof HTMLElement?(n.info(`問い合わせ詳細ボタンをクリック: ID=${a.id}`),d.click(),new Promise((e=>{setTimeout((async()=>{n.info("詳細ページから電話番号を抽出して処理します"),n.info("問い合わせ詳細ページの処理を開始します"),chrome.runtime.sendMessage({action:"processInquiryDetails"},(async r=>{const i=r&&"inquiry_processed"===r.status;if(i){n.info(`問い合わせ ID=${a.id} の処理が成功しました`),a.called=!0;try{await h(o,t),n.info(`問い合わせ ID=${a.id} のコール履歴を更新しました`)}catch(e){n.error("コール履歴更新エラー:",e),setTimeout((async()=>{try{await h(o,t),n.info(`問い合わせ ID=${a.id} のコール履歴をリトライで更新しました`)}catch(t){n.error("コール履歴リトライ更新エラー:",t)}}),1e3)}setTimeout((async()=>{n.info("処理完了後、一覧ページに戻ります");const t=await u();t&&(window.location.href=window.location.origin+t.path)}),7e3)}else{n.info("メッセージング経由での処理が失敗しました。直接処理を試みます");if(await f()){n.info(`直接処理が成功しました。問い合わせ ID=${a.id} をコール済みとしてマーク`),a.called=!1;try{await h(o,t),n.info("直接処理後のコール履歴を更新しました")}catch(e){n.error("直接処理後のコール履歴更新エラー:",e),setTimeout((async()=>{try{await h(o,t),n.info("直接処理後のコール履歴をリトライで更新しました")}catch(t){n.error("直接処理後のコール履歴リトライ更新エラー:",t)}}),1e3)}}else n.warn(`問い合わせ ID=${a.id} の処理に失敗しました`)}e(i||!1)}))}),3e3)}))):(n.warn("詳細ボタンが見つかりませんでした"),!1)}catch(t){return n.error("新着問い合わせチェックエラー:",t),!1}}function y(){n.info("CMS コンテンツスクリプト初期化, document ready state:",document.readyState),window.cmsContentInitialized=!0,window.extractPhoneNumber=d,n.info("電話番号抽出テスト機能を初期化します"),window.testPhoneExtraction=async function(){window.testExtractPhoneNumber=d;const t=d();window.simulatePageStructure();const e=d(),n=document.createElement("div");n.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 20px;\n      background-color: #f0f0f0;\n      border: 1px solid #ccc;\n      border-radius: 5px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.2);\n      z-index: 9999;\n      font-family: Arial, sans-serif;\n      max-width: 300px;\n    ",n.innerHTML=`\n      <h3>電話番号抽出テスト結果</h3>\n      <p>現在のページ: <strong>${t||"なし"}</strong></p>\n      <p>テスト構造: <strong>${e||"なし"}</strong></p>\n      <p>${t||e?"抽出成功！":"抽出失敗..."}</p>\n      <button id="close-test-result" style="padding: 5px 10px; margin-top: 10px;">閉じる</button>\n    `,document.body.appendChild(n),document.getElementById("close-test-result")?.addEventListener("click",(()=>{n.remove()}))},window.simulatePageStructure=function(){const t=document.getElementById("phone-extraction-test-container");t&&t.remove();const e=document.createElement("div");e.id="phone-extraction-test-container",e.style.display="none",e.innerHTML='\n      <table class="detail-table">\n        <tr>\n          <th>氏名</th>\n          <td>テスト太郎</td>\n        </tr>\n        <tr>\n          <th>電話番号</th>\n          <td>08055260966</td>\n        </tr>\n        <tr>\n          <th>メールアドレス</th>\n          <td>test@example.com</td>\n        </tr>\n      </table>\n    \n      <dl class="customer-info">\n        <dt>氏名</dt>\n        <dd>テスト花子</dd>\n        <dt>TEL</dt>\n        <dd>080-5526-0966</dd>\n        <dt>メールアドレス</dt>\n        <dd>hanako@example.com</dd>\n      </dl>\n    \n      <form class="inquiry-form">\n        <div class="form-group">\n          <label for="customer-name">氏名</label>\n          <input type="text" id="customer-name" value="テスト次郎">\n        </div>\n        <div class="form-group">\n          <label for="customer-tel">連絡先</label>\n          <input type="tel" id="customer-tel" value="08055260966">\n        </div>\n      </form>\n    \n      <div class="client-detail">\n        <div class="detail-row">\n          <span class="label">名前</span>\n          <span class="value">テスト三郎</span>\n        </div>\n        <div class="detail-row">\n          <span class="label">連絡先</span>\n          <span class="value phone">080 5526 0966</span>\n        </div>\n      </div>\n    \n      <div class="client-info">\n        <div class="customer-detail">\n          <div class="info-label">お客様情報</div>\n          <div class="info-content">\n            <div class="name-row">テスト四郎</div>\n            <div class="phone-value">080(5526)0966</div>\n          </div>\n        </div>\n      </div>\n    ',document.body.appendChild(e)},n.info("電話番号抽出テスト機能の初期化が完了しました");try{const t=document.title;n.debug(`現在のページタイトル: ${t}`),!function(){try{const t=window.location.href,e=window.location.hostname,o="localhost"===e||e.includes("localhost");return n.debug(`CMSページ判定: URL=${t}, ホスト名=${e}, localhost=${o}`),o?(n.info("localhostをCMSページとして検出しました"),!0):t.includes("brand-satei.me/client/cv/")}catch(t){return n.error("URL確認エラー:",t),!1}}()?n.info("お問い合わせCMS以外のページです"):n.info("お問い合わせCMSページが検出されました")}catch(t){n.error("DOM操作エラー:",t)}}window.cmsContentInitialized=!1;const p=()=>{y(),l()&&(n.info("問い合わせ詳細ページを検出しました。自動処理を開始します"),setTimeout((()=>{f()}),1e3))};"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>{n.debug("DOMContentLoaded event triggered (CMS)"),p()})):(n.debug("Document already loaded, initializing immediately (CMS)"),p()),chrome.runtime.onMessage.addListener(((t,e,o)=>{n.debug("CMS コンテンツスクリプトでメッセージを受信:",t);try{if("ping"===t.action)return n.debug("Ping received in CMS content script, sending pong response"),o({status:"pong",url:window.location.href,initialized:window.cmsContentInitialized,timestamp:Date.now()}),!0;if(window.cmsContentInitialized||(n.warn("CMS コンテンツスクリプトがまだ完全に初期化されていません！"),y()),"checkNewInquiries"===t.action)return n.info("新着問い合わせチェックを開始します"),s().then((t=>{t?(n.info("一覧ページで新着問い合わせをチェックします"),w().then((t=>{t?(n.info("新着問い合わせが見つかりました、処理を続行します"),o({status:"new_inquiry_found",message:"新着問い合わせが見つかりました"})):(n.info("現在のデータでは新着問い合わせが見つかりません。ページをリロードします"),o({status:"reloading",message:"最新データを取得するためにページをリロードします"}),setTimeout((()=>{window.location.reload()}),500))})).catch((t=>{n.error("新着チェックエラー:",t),o({status:"error",message:"新着チェック中にエラーが発生しました: "+t.message})}))):(n.info("一覧ページではないので、現在の処理を継続します"),w().then((t=>{o({status:t?"new_inquiry_found":"no_new_inquiry",message:t?"新着問い合わせが見つかりました":"新着問い合わせはありません"})})).catch((t=>{n.error("新着チェックエラー:",t),o({status:"error",message:"新着チェック中にエラーが発生しました: "+t.message})})))})),!0;if("processInquiryDetails"===t.action)return n.info("問い合わせ詳細処理を開始します"),f().then((t=>{n.info("問い合わせ詳細処理結果: "+(t?"成功":"失敗")),o({status:t?"inquiry_processed":"inquiry_processing_failed",message:t?"問い合わせ詳細を処理しました":"問い合わせ詳細の処理に失敗しました"})})).catch((t=>{n.error("詳細処理エラー:",t),o({status:"error",message:"詳細処理中にエラーが発生しました: "+t.message})})),!0;switch(t.action){case"showConfirmationDialog":case"callPhoneAction":return n.debug("他で利用するためのアクション:",t.action),!0}return n.warn(`未知のアクション: ${t.action}`),o({status:"error",message:`未知のアクション: ${t.action}`}),!0}catch(t){return n.error("CMS コンテンツスクリプトで予期しないエラーが発生しました:",t),o({status:"error",message:"CMS コンテンツスクリプトで予期しないエラーが発生しました: "+(t.message||String(t))}),!0}})),document.addEventListener("visibilitychange",(()=>{"visible"!==document.visibilityState||window.cmsContentInitialized||(n.debug("ページが表示されました。CMS コンテンツスクリプトの再初期化を試みます..."),y())})),window.addEventListener("load",(()=>{n.debug("window.load イベントが発火しました (CMS)"),window.cmsContentInitialized||(n.debug("load イベント時に初期化されていないため、再初期化を実行します (CMS)"),y())})),setTimeout((()=>{window.cmsContentInitialized||(n.debug("タイムアウト後も初期化されていないため、再初期化を実行します (CMS)"),y())}),2e3)})();