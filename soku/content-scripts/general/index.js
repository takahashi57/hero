(()=>{"use strict";var e;!function(e){e[e.NONE=0]="NONE",e[e.ERROR=1]="ERROR",e[e.WARN=2]="WARN",e[e.INFO=3]="INFO",e[e.DEBUG=4]="DEBUG"}(e||(e={}));let t=e.DEBUG;const n={LogLevel:e,setLogLevel:function(e){t=e},info:function(t,...n){e.INFO},debug:function(t,...n){e.DEBUG},warn:function(t,...n){e.WARN},error:function(t,n,...r){e.ERROR},groupStart:function(t,n=!1){e.DEBUG},groupEnd:function(){e.DEBUG}};function r(){try{const e=window.getSelection();if(!e||e.isCollapsed)return;const t=e.toString().trim();if(!t)return;(function(e){try{const t=function(e){return e.trim().replace(/[\s\-\(\)]/g,"")}(e);if(n.debug(`電話番号チェック: ${e} -> 正規化後: ${t}`),t.length<7)return n.debug(`桁数不足のため電話番号ではありません: ${t} (桁数: ${t.length})`),!1;const r=/^\+?\d+$/.test(t);return r?n.debug(`電話番号として有効: ${t}`):n.debug(`電話番号ではありません: ${t} (パターン不一致)`),r}catch(e){return n.error("電話番号チェックエラー:",e),!1}})(t)&&n.debug(`電話番号形式のテキストが選択されました: ${t}`)}catch(e){n.error("選択テキスト処理エラー:",e)}}const o="isCurrentlyCalling";async function i(){try{return await chrome.storage.local.remove(o),n.info("電話発信状態をリセットしました"),!0}catch(e){return n.error("電話発信状態のリセットに失敗しました:",e),!1}}async function s(e,t=!0,r){try{if(n.info("電話発信アクションを開始します"),n.info(`電話番号: ${e||"指定なし"}`),n.info("発信フラグ: "+(t?"ON":"OFF")),"undefined"==typeof document||null===document)return n.error("Document is not available for phone action"),r&&r({status:"error",message:"Document is not available for phone action"}),!1;const s=document.querySelector('div [data-testid="home"]');if(!s){n.warn("Home element not found - ページ構造が変わっている可能性があります");if(0===document.querySelectorAll("div.fixed.bottom-0").length)return n.error("電話入力エリアが見つかりません"),i(),r&&r({status:"error",message:"Home element not found - ページ構造が変わっている可能性があります"}),!1;n.info("代替手法で電話入力エリアを検出しました")}const a=s?s.nextElementSibling:document.querySelector("div.fixed.bottom-0");if(n.debug("Phone element found:",!!a),!a)return n.error("電話番号入力エリアが見つかりません - ページ構造が変わっている可能性があります"),i(),r&&r({status:"error",message:"電話番号入力エリアが見つかりません"}),!1;a.classList.contains("translate-y-[620px]")&&(n.debug("電話パッドが閉じているのでクラスを削除して表示します"),a.classList.remove("translate-y-[620px]"));const c=e||"09012345678",u={},l=a.querySelectorAll("button");let d=0;if(l.forEach((e=>{e.textContent&&-1!==e.textContent.search(/^[0-9]$/)&&(u[e.textContent]=e,d++),e.querySelector("i.fa-times")&&(u.clear=e)})),0===d)return n.error("数字ボタンが見つかりません - ページ構造が変わっている可能性があります"),i(),r&&r({status:"error",message:"数字ボタンが見つかりません"}),!1;if(n.debug(`${d}個の数字ボタンを検出しました`),n.info(`入力する電話番号: ${c}`),u.clear){n.debug("クリアボタンを押下します");for(let e=0;e<12;e++)u.clear.click()}else n.warn("クリアボタンが見つかりません - 直接入力を試みます");let g=null;const m=a.querySelectorAll("button > i.fa-phone");if(m&&m.length>0)g=m[0].parentElement,n.debug("発信ボタンを検出しました:",!!g);else{n.warn("発信ボタンが見つかりません - ページ構造が変わっている可能性があります");const e=a.querySelectorAll("button");for(const t of Array.from(e))if(t.innerHTML.includes("phone")||t.innerHTML.includes("call")||t.classList.contains("call-button")){g=t,n.info("代替手法で発信ボタンを検出しました");break}}return new Promise((e=>{let s=0;const a=()=>{if(s>=c.length)return n.info("電話番号の入力が完了しました"),void(t&&g?setTimeout((()=>{n.info("発信ボタンを押下します"),g.click();const t=new MutationObserver((()=>{!document.querySelector(".call-active, .call-screen, .call-in-progress")&&(n.info("通話終了またはキャンセルを検出しました。発信状態をリセットします"),i(),t.disconnect())}));t.observe(document.body,{childList:!0,subtree:!0});const s=setInterval((()=>{(async function(){try{return!!(await chrome.storage.local.get([o]))[o]}catch(e){return n.error("電話発信状態の取得に失敗しました:",e),!1}})().then((e=>{if(e){document.querySelector(".call-active, .call-screen, .call-in-progress")||(n.info("定期確認: 通話画面が表示されていません。発信状態をリセットします"),i(),clearInterval(s))}else clearInterval(s)}))}),5e3);r&&r({status:"success",message:"電話番号がダイヤルされ、発信が開始されました",phoneNumber:c}),e(!0)}),500):(t&&!g?(n.warn("発信フラグがONですが、発信ボタンが見つかりませんでした"),i().then((()=>{n.info("発信ボタンが見つからないため、発信状態をリセットしました")})),r&&r({status:"partial",message:"電話番号が正常にダイヤルされましたが、発信ボタンが見つからないため発信は行われませんでした",phoneNumber:c})):(t||i().then((()=>{n.info("自動発信がOFFのため、発信状態をリセットしました")})),r&&r({status:"success",message:"電話番号が正常にダイヤルされました",phoneNumber:c})),e(!0)));const l=c[s];u[l]?(n.debug(`数字 ${l} を押下します`),u[l].click(),s++,setTimeout(a,100)):(n.warn(`数字 ${l} のボタンが見つかりません`),s++,setTimeout(a,100))};a()}))}catch(e){return n.error("電話アクション実行中にエラーが発生しました:",e),i(),r&&r({status:"error",message:"電話アクション実行中にエラーが発生しました: "+(e.message||String(e))}),!1}}function a(){n.info("一般コンテンツスクリプト初期化しました, document ready state:",document.readyState),window.contentInitialized=!0,function(){n.debug("電話番号検出を初期化します");try{document.addEventListener("selectionchange",r),n.debug("電話番号検出リスナーを設定しました")}catch(e){n.error("電話番号検出初期化エラー:",e)}}(),n.debug("コンテンツスクリプトの初期化が完了しました"),chrome.runtime.sendMessage({action:"ping"},(e=>{chrome.runtime.lastError?n.warn("初期化確認のpingが失敗しました:",chrome.runtime.lastError):n.debug("初期化確認のpingが成功しました:",e)}))}window.contentInitialized=!1,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>{n.debug("DOMContentLoaded event triggered"),a()})):(n.debug("Document already loaded, initializing immediately"),a()),chrome.runtime.onMessage.addListener(((e,t,r)=>{n.debug("コンテンツスクリプトでメッセージを受信:",e);try{if("ping"===e.action){n.debug("Ping received in content script, sending pong response");const e={status:"pong",url:window.location.href,initialized:window.contentInitialized,timestamp:Date.now()};return n.debug(`Ping応答を送信: ${JSON.stringify(e)}`),r(e),!0}if(window.contentInitialized||(n.warn("コンテンツスクリプトがまだ完全に初期化されていません！"),a()),"callPhoneAction"===e.action)try{n.info(`電話発信メッセージを受信: ${JSON.stringify(e)}`);const t=window.location.hostname;return n.debug(`現在のホスト名: ${t}`),t.includes("sokucom.cloud")?(n.info(`SokuComドメインで発信処理を実行します: ${t}`),e.phoneNumber?(n.info(`SokuComタブで電話発信を実行: ${e.phoneNumber}`),s(e.phoneNumber,!0===e.autoCall,r),!0):(n.error("電話番号が指定されていません"),r({status:"error",message:"電話番号が指定されていません"}),!0)):(n.warn(`SokuComドメインではありません: ${t}`),r({status:"error",message:`SokuComドメインではありません: ${t}`}),!0)}catch(e){return n.error("SokuCom電話発信エラー:",e),r({status:"error",message:`発信処理中にエラーが発生しました: ${e.message||String(e)}`}),!0}switch(e.action){case"checkNewInquiries":case"processInquiryDetails":return n.debug("他で利用するためのアクション:",e.action),!0}return r({status:"error",message:`不明なアクション: ${e.action}`}),!0}catch(e){return n.error("コンテンツスクリプトで予期しないエラーが発生しました:",e),r({status:"error",message:"予期しないエラーが発生しました: "+(e.message||String(e))}),!0}})),document.addEventListener("visibilitychange",(()=>{"visible"!==document.visibilityState||window.contentInitialized||(n.debug("ページが表示されました。コンテンツスクリプトの再初期化を試みます..."),a())})),window.addEventListener("load",(()=>{n.debug("window.load イベントが発火しました"),window.contentInitialized||(n.debug("load イベント時に初期化されていないため、再初期化を実行します"),a())})),setTimeout((()=>{window.contentInitialized||(n.debug("タイムアウト後も初期化されていないため、再初期化を実行します"),a())}),2e3)})();