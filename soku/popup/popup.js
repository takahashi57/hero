(()=>{"use strict";const e="autoCallEnabled",t="autoRefreshEnabled",n="refreshInterval",r="cmsSettings";var o;!function(e){e[e.NONE=0]="NONE",e[e.ERROR=1]="ERROR",e[e.WARN=2]="WARN",e[e.INFO=3]="INFO",e[e.DEBUG=4]="DEBUG"}(o||(o={}));let a=o.DEBUG;const c={LogLevel:o,setLogLevel:function(e){a=e},info:function(e,...t){o.INFO},debug:function(e,...t){o.DEBUG},warn:function(e,...t){o.WARN},error:function(e,t,...n){o.ERROR},groupStart:function(e,t=!1){o.DEBUG},groupEnd:function(){o.DEBUG}};function s(e,t=!1){try{const n=document.getElementById("statusMessage");if(!n)return;n.textContent=e,n.style.color=t?"red":"green",n.style.display="block",setTimeout((()=>{n.style.display="none"}),3e3),c.debug(`ステータスメッセージを表示: ${e}`)}catch(e){c.error("ステータス表示エラー:",e)}}function d(e){try{document.querySelectorAll(".tab-content").forEach((e=>{e.style.display="none"}));document.querySelectorAll(".tab-button").forEach((e=>{e.classList.remove("active")}));const t=document.getElementById(e);t&&(t.style.display="block");const n=document.querySelector(`[data-tab="${e}"]`);n&&n.classList.add("active"),c.debug(`タブを切り替え: ${e}`)}catch(e){c.error("タブ切り替えエラー:",e)}}async function i(e){try{if(!e.targets||!Array.isArray(e.targets)||0===e.targets.length)throw new Error("無効なCMS設定です。少なくとも1つのターゲットが必要です");await l({[r]:e}),chrome.runtime.sendMessage({action:"updateCmsSettings",settings:e},(e=>{chrome.runtime.lastError?c.error("CMS設定通知エラー:",chrome.runtime.lastError):c.debug("CMS設定の応答:",e)})),c.info("CMS設定を更新しました")}catch(e){throw c.error("CMS設定更新エラー:",e),e}}async function l(e){return new Promise(((t,n)=>{chrome.storage.sync.set(e,(()=>{chrome.runtime.lastError?(c.error("設定保存エラー:",chrome.runtime.lastError),n(chrome.runtime.lastError)):(c.debug("設定を保存しました:",e),t())}))}))}function u(e){const t=document.getElementById("cmsSettingsTab"),n=document.getElementById("cmsTargetList");if(!t||!n)return void c.warn("CMS設定タブの要素が見つかりません");const r=e||{targets:[{domain:"brand-satei.me",path:"/client/cv/",selector:"form#form_list > table"}]};n.innerHTML="",r.targets.forEach(((e,t)=>{const r=document.createElement("div");r.classList.add("target-item"),r.innerHTML=`\n      <div class="target-info">\n        <h4>${e.domain}${e.path}</h4>\n        <p>Selector: ${e.selector}</p>\n      </div>\n      <div class="target-actions">\n        <button class="edit-btn" data-index="${t}">Edit</button>\n        <button class="delete-btn" data-index="${t}">Delete</button>\n      </div>\n    `,n.appendChild(r)}));const o=document.getElementById("addTargetBtn");if(o){const e=o.cloneNode(!0);o.parentNode&&o.parentNode.replaceChild(e,o),e.addEventListener("click",(()=>{const e=document.getElementById("editTargetForm");if(e){e.style.display="block";const t=document.getElementById("editFormTitle");t&&(t.textContent="新規ターゲットを追加");const n=document.getElementById("targetDomain"),r=document.getElementById("targetPath"),o=document.getElementById("targetSelector");n&&r&&o&&(n.value="",r.value="/",o.value="form#form_list > table")}}))}document.querySelectorAll(".edit-btn").forEach((e=>{e.addEventListener("click",(e=>{const t=parseInt(e.currentTarget.getAttribute("data-index")||"0"),n=r.targets[t],o=document.getElementById("editTargetForm");if(o){o.style.display="block";const e=document.getElementById("editFormTitle");e&&(e.textContent="ターゲットを編集");const r=document.getElementById("targetDomain"),a=document.getElementById("targetPath"),c=document.getElementById("targetSelector");r&&a&&c&&(r.value=n.domain,a.value=n.path,c.value=n.selector,r.dataset.editIndex=String(t))}}))}));document.querySelectorAll(".delete-btn").forEach((e=>{e.addEventListener("click",(async e=>{const t=parseInt(e.currentTarget.getAttribute("data-index")||"0");confirm("このターゲットを削除してもよろしいですか？")&&(r.targets.splice(t,1),await i(r),u(r),s("ターゲットを削除しました"))}))}));const a=document.getElementById("saveTargetBtn");if(a){const e=a.cloneNode(!0);a.parentNode&&a.parentNode.replaceChild(e,a),e.addEventListener("click",(async()=>{const e=document.getElementById("targetDomain"),t=document.getElementById("targetPath"),n=document.getElementById("targetSelector");if(e&&t&&n){const o=e.value.trim(),a=t.value.trim(),c=n.value.trim();if(!o||!a||!c)return void s("すべてのフィールドを入力してください",!0);const d=e.dataset.editIndex;if(d&&!isNaN(parseInt(d))){const e=parseInt(d);r.targets[e]={domain:o,path:a,selector:c},s("ターゲットを更新しました")}else r.targets.push({domain:o,path:a,selector:c}),s("新規ターゲットを追加しました");await i(r);const l=document.getElementById("editTargetForm");l&&(l.style.display="none"),u(r)}}))}const d=document.getElementById("cancelTargetBtn");if(d){const e=d.cloneNode(!0);d.parentNode&&d.parentNode.replaceChild(e,d),e.addEventListener("click",(()=>{const e=document.getElementById("editTargetForm");e&&(e.style.display="none")}))}}document.addEventListener("DOMContentLoaded",(async()=>{try{c.info("ポップアップUIを初期化しています");const o=document.getElementById("autoCallToggle"),a=document.getElementById("autoRefreshToggle"),i=document.getElementById("refreshInterval"),m=document.getElementById("actionButton");document.getElementById("statusMessage");document.querySelectorAll(".tab-button").forEach((e=>{e.addEventListener("click",(e=>{const t=e.currentTarget.getAttribute("data-tab");t&&d(t)}))})),d("mainTab");const g=await async function(){return new Promise((o=>{chrome.storage.sync.get([e,t,n,r],(e=>{if(chrome.runtime.lastError)return c.error("設定取得エラー:",chrome.runtime.lastError),void o({autoCallEnabled:!1,autoRefreshEnabled:!1,refreshInterval:10});o(e)}))}))}();!function(e){try{const t=document.getElementById("autoCallToggle"),n=document.getElementById("autoRefreshToggle"),r=document.getElementById("refreshInterval");t&&(t.checked=!0===e.autoCallEnabled),n&&(n.checked=!0===e.autoRefreshEnabled),r&&(r.value=String(e.refreshInterval||10),r.disabled=!0!==e.autoRefreshEnabled),c.debug("UIを更新しました:",e)}catch(e){c.error("UI更新エラー:",e)}}(g),o.addEventListener("change",(async()=>{const t=o.checked;await async function(t){try{await l({[e]:t}),chrome.runtime.sendMessage({action:"toggleAutoCall",enabled:t},(e=>{chrome.runtime.lastError?c.error("自動発信設定通知エラー:",chrome.runtime.lastError):c.debug("自動発信設定の応答:",e)})),c.info(`自動発信を${t?"有効":"無効"}に設定しました`)}catch(e){throw c.error("自動発信設定エラー:",e),e}}(t),s(`自動発信を${t?"有効":"無効"}にしました`)})),a.addEventListener("change",(async()=>{const e=a.checked;i.disabled=!e,await async function(e){try{await l({[t]:e}),chrome.runtime.sendMessage({action:"toggleAutoRefresh",enabled:e},(e=>{chrome.runtime.lastError?c.error("自動更新設定通知エラー:",chrome.runtime.lastError):c.debug("自動更新設定の応答:",e)})),c.info(`自動更新を${e?"有効":"無効"}に設定しました`)}catch(e){throw c.error("自動更新設定エラー:",e),e}}(e),s(`自動更新を${e?"有効":"無効"}にしました`)})),m.addEventListener("click",(async()=>{const e=parseInt(i.value);isNaN(e)||e<0?s("更新間隔は1秒以上の値を入力してください",!0):(await async function(e){try{if(isNaN(e)||e<0)throw new Error("更新間隔は1秒以上の値を入力してください");await l({[n]:e}),chrome.runtime.sendMessage({action:"setRefreshInterval",interval:e},(e=>{chrome.runtime.lastError?c.error("更新間隔設定通知エラー:",chrome.runtime.lastError):c.debug("更新間隔設定の応答:",e)})),c.info(`更新間隔を ${e} 秒に設定しました`)}catch(e){throw c.error("更新間隔設定エラー:",e),e}}(e),s(`更新間隔を ${e} 秒に設定しました`))})),u(g.cmsSettings),function(){try{const e=document.getElementById("extensionVersion");if(!e)return;const t=chrome.runtime.getManifest();e.textContent=`ver ${t.version}`,c.debug(`拡張機能バージョンを表示: ${t.version}`)}catch(e){c.error("バージョン表示エラー:",e)}}(),c.info("ポップアップUIの初期化が完了しました")}catch(e){c.error("ポップアップ初期化エラー:",e),s("設定の読み込み中にエラーが発生しました",!0)}}))})();