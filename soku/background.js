(()=>{"use strict";const e="autoCallEnabled",r="autoRefreshEnabled",t="refreshInterval",n="callHistory",o="cmsSettings",a="refreshCmsAlarm",s="callWithSokucom",i="sokucom.cloud",c="https://10000002408dd3r1.sokucom.cloud/login";var u;!function(e){e[e.NONE=0]="NONE",e[e.ERROR=1]="ERROR",e[e.WARN=2]="WARN",e[e.INFO=3]="INFO",e[e.DEBUG=4]="DEBUG"}(u||(u={}));let m=u.DEBUG;const l={LogLevel:u,setLogLevel:function(e){m=e},info:function(e,...r){u.INFO},debug:function(e,...r){u.DEBUG},warn:function(e,...r){u.WARN},error:function(e,r,...t){u.ERROR},groupStart:function(e,r=!1){u.DEBUG},groupEnd:function(){u.DEBUG}};async function h(e){return new Promise((r=>{chrome.storage.sync.get(e,(e=>{if(chrome.runtime.lastError)return l.error("設定取得エラー:",chrome.runtime.lastError),void r({});r(e)}))}))}async function d(e){return new Promise((r=>{chrome.storage.sync.set(e,(()=>{chrome.runtime.lastError?l.error("設定保存エラー:",chrome.runtime.lastError):l.debug("設定を保存しました"),r()}))}))}const f="isCurrentlyCalling";async function g(){try{return!!(await chrome.storage.local.get([f]))[f]}catch(e){return l.error("電話発信状態の取得に失敗しました:",e),!1}}function $(e,r){try{if(e.menuItemId===s&&e.selectionText){const t=y(e.selectionText);t?(l.info(`選択された電話番号: ${t}`),async function(e,r){try{const t=await h(["autoCallEnabled"]);!0===t.autoCallEnabled?b(e):w(e,r)}catch(e){l.error("電話番号処理エラー:",e)}}(t,r)):(l.warn("有効な電話番号が選択されていません"),S("有効な電話番号を選択してください"))}}catch(e){l.error("コンテキストメニュークリック処理エラー:",e)}}function y(e){return e.trim().replace(/[\s\-\(\)]/g,"")}async function b(e){try{l.info(`SokuComタブで電話番号 ${e} の発信を開始します`);const r=`*${i}*`;l.debug(`SokuComタブを検索: パターン=${r}, 実際URL=${i}`);const t=!0===await async function(){try{return!!(await chrome.storage.sync.get(["autoCallEnabled"])).autoCallEnabled}catch(e){return l.error("自動発信設定の取得に失敗しました:",e),!1}}();chrome.tabs.query({},(r=>{l.debug(`全タブ数: ${r.length}`),r.forEach((e=>{l.debug(`タブ URL: ${e.url||"不明"}`)}));const n=r.filter((e=>{if(!e.url)return!1;const r=e.url.includes("sokucom.cloud")||e.url.includes(i)||e.url.includes("d15z6p7odsizfu.cloudfront.net");return r&&l.debug(`SokuComタブを発見: ${e.url}`),r}));if(l.debug(`SokuComタブ数: ${n.length}`),n.length>0){const r=n[0];r.id?(l.info(`既存のSokuComタブを使用: ID=${r.id}, URL=${r.url}`),chrome.tabs.update(r.id,{active:!0},(()=>{r.url&&!r.url.includes("/login")?(l.info(`SokuComタブに電話発信メッセージを送信します: ${e}`),setTimeout((()=>{chrome.tabs.sendMessage(r.id,{action:"ping"},(n=>{!("pong"===n?.status)&&chrome.runtime.lastError&&l.warn(`Ping確認でエラー: ${chrome.runtime.lastError.message}。それでも発信を試みます`),setTimeout((()=>{try{l.info(`SokuComタブ ${r.id} にcallPhoneActionメッセージを送信します: ${e}`),chrome.tabs.sendMessage(r.id,{action:"callPhoneAction",phoneNumber:e,autoCall:t},(n=>{if(chrome.runtime.lastError){l.error(`SokuComタブへのメッセージ送信エラー: ${chrome.runtime.lastError.message}`),l.info("コンテンツスクリプトの再読み込みを試みます");try{chrome.scripting.executeScript({target:{tabId:r.id},files:["content-scripts/general/index.js"]},(n=>{chrome.runtime.lastError?(l.error(`スクリプトの実行エラー: ${chrome.runtime.lastError.message}`),S(`電話発信エラー: ${chrome.runtime.lastError.message}`)):(l.info("コンテンツスクリプトを再読み込みしました。発信を再試行します"),setTimeout((()=>{chrome.tabs.sendMessage(r.id,{action:"callPhoneAction",phoneNumber:e,autoCall:t})}),500))}))}catch(e){l.error("スクリプトの実行中に例外が発生しました:",e),S("電話発信エラー: スクリプトの実行中に例外が発生しました")}}else n?(l.info(`SokuComタブからの応答: ${JSON.stringify(n)}`),"success"===n.status?S(`電話番号 ${e} で発信処理を開始しました`):S(`発信処理中にエラーが発生しました: ${n.message||"不明なエラー"}`)):(l.warn("SokuComタブからの応答がありません"),S(`電話番号 ${e} で発信処理を開始しました（応答がありません）`))}))}catch(e){l.error("発信メッセージ送信中の例外:",e),S("発信メッセージの送信に失敗しました")}}),300)}))}),1e3)):(l.warn("SokuComタブがログイン画面です"),S("SokuComにログインしてから再度お試しください"))}))):(l.error("SokuComタブのIDが見つかりません"),S("SokuComタブのIDが見つかりません。再度お試しください"))}else l.info(`SokuComタブが見つからないため、新規タブを作成: URL=${c}`),chrome.tabs.create({url:c},(e=>{chrome.runtime.lastError?l.error(`新規タブ作成エラー: ${chrome.runtime.lastError.message}`):l.info(`新規タブを作成しました: ID=${e.id}`),S("SokuComにログインしてから再度お試しください")}))}))}catch(e){l.error("SokuComタブオープンエラー:",e),S(`エラーが発生しました: ${e.message||"不明なエラー"}`)}}function w(e,r){try{l.info(`電話番号 ${e} の直接発信を開始します`),b(e)}catch(e){l.error("電話発信エラー:",e)}}function S(e){try{chrome.notifications&&chrome.notifications.create?chrome.notifications.create({type:"basic",iconUrl:"../icons/icon-128.png",title:"SokuCom電話連携",message:e},(r=>{chrome.runtime.lastError?l.warn(`通知の表示に失敗: ${chrome.runtime.lastError.message}`):l.info(`通知を表示: ${e}`)})):l.warn(`通知APIが利用できません: ${e}`)}catch(e){l.error(`通知表示エラー: ${e}`)}}async function p(e,r){try{chrome.tabs.get(e,(e=>{if(chrome.runtime.lastError)E().then((e=>{0===e.length&&(l.info("全てのCMSタブが閉じられました。コール履歴をクリアします"),d({[n]:{}}))}));else if(e&&e.url){const r=v(e.url);if(r){const{domainPathKey:e}=r;l.info(`CMSタブ（${e}）が閉じられました`),async function(e){try{const r=await h([o]),t=(r.cmsSettings||{targets:[{domain:"brand-satei.me",path:"/client/cv/",selector:"form#form_list > table"},{domain:"localhost",path:"/",selector:"div.inquiry-list > table"}]}).targets.find((r=>`${r.domain}${r.path}`===e));return t?new Promise((e=>{chrome.tabs.query({},(r=>{const n=r.filter((e=>{if(!e.url)return!1;try{const r=new URL(e.url);return r.host===t.domain&&r.pathname.startsWith(t.path)}catch(e){return!1}}));e(n)}))})):[]}catch(e){return l.error("CMS検索エラー:",e),[]}}(e).then((r=>{0===r.length&&(l.info(`ドメイン ${e} の全てのタブが閉じられました。コール履歴をクリアします`),async function(e){try{const r=(await h([n])).callHistory||{};r[e]&&(delete r[e],await d({[n]:r}),l.info(`ドメイン ${e} のコール履歴を削除しました`))}catch(e){l.error("コール履歴クリアエラー:",e)}}(e))}))}}}))}catch(e){l.error("タブ削除処理エラー:",e)}}function C(e,r,t){if(r.url&&t.url){const e=v(t.url);e&&l.debug(`CMSタブ（${e.domainPathKey}）が更新されました`)}}async function E(){try{const e=(await h([o])).cmsSettings||{targets:[{domain:"brand-satei.me",path:"/client/cv/",selector:"form#form_list > table"},{domain:"localhost",path:"/",selector:"div.inquiry-list > table"}]};return new Promise((r=>{chrome.tabs.query({},(t=>{l.debug(`全タブ数: ${t.length}`),t.length>0&&l.debug(`最初のタブURL: ${t[0].url||"不明"}, ID: ${t[0].id||"不明"}`);const n=t.filter((r=>{if(!r.url)return l.debug(`タブURLが不明 (id=${r.id})`),!1;try{const t=new URL(r.url);if(l.debug(`タブ確認: URL=${r.url}, ホスト=${t.host}, パス=${t.pathname}`),"localhost:8080"===t.host||t.host.includes("localhost"))return l.debug(`localhostタブをCMSタブとして検出: ${r.url}`),!0;return e.targets.some((e=>{const r=t.host===e.domain&&t.pathname.startsWith(e.path);return r&&l.debug(`CMSターゲットに合致: ドメイン=${e.domain}, パス=${e.path}`),r}))}catch(e){return l.debug(`URL解析エラー (${r.url}): ${e.message}`),!1}}));l.debug(`CMSタブ判定結果: ${n.length}件検出`),n.length>0&&n.forEach((e=>{l.debug(`検出したCMSタブ: ${e.url}, ID=${e.id}`)})),r(n)}))}))}catch(e){return l.error("CMSタブ検索エラー:",e),[]}}function v(e){try{const r=new URL(e),t={targets:[{domain:"brand-satei.me",path:"/client/cv/",selector:"form#form_list > table"},{domain:"localhost",path:"/",selector:"div.inquiry-list > table"}]};for(const e of t.targets)if(r.host===e.domain&&r.pathname.startsWith(e.path)){return{domainPathKey:`${e.domain}${e.path}`,target:e}}return null}catch(e){return l.error("無効なURL形式:",e),null}}async function R(){try{const e=await h([r,t]),n=!0===e.autoRefreshEnabled,o=e.refreshInterval||10;n?k(o):N(),chrome.alarms.onAlarm.addListener(M),l.info("自動更新マネージャーを初期化しました",{autoRefreshEnabled:n,refreshInterval:o})}catch(e){l.error("自動更新マネージャー初期化エラー:",e)}}function M(e){l.debug(`アラームが発火しました: ${e.name} アラーム、含データ=${JSON.stringify(e)}`),e.name===a&&(l.info("自動更新アラームが発火しました"),async function(){try{if(!0!==(await h([r])).autoRefreshEnabled)return void l.debug("自動更新が無効なため、更新をスキップします");if(await g())return void l.info("電話発信中のため、自動更新をスキップします");const e=await E();if(l.debug(`更新対象のCMSタブ: ${e.length}件`),0===e.length)return void l.info("CMSタブが見つかりません。更新をスキップします。");for(const r of e)if(r.id)try{l.debug(`タブ ${r.id} に新着問い合わせ確認メッセージを送信: URL=${r.url}`),chrome.tabs.sendMessage(r.id,{action:"ping"},(e=>{if(chrome.runtime.lastError)return l.warn(`タブ ${r.id} へのping送信エラー: ${chrome.runtime.lastError.message}`),void(chrome.runtime.lastError.message.includes("Receiving end does not exist")&&(l.info(`タブ ${r.id} のコンテンツスクリプトが読み込まれていないため、リロードします`),chrome.tabs.reload(r.id,{},(()=>{l.info(`タブ ${r.id} をリロードしました`)}))));l.debug(`タブ ${r.id} からping応答: ${JSON.stringify(e)}`),chrome.tabs.sendMessage(r.id,{action:"checkNewInquiries"},(e=>{chrome.runtime.lastError?l.warn(`タブ ${r.id} へのメッセージ送信エラー: ${chrome.runtime.lastError.message}`):e&&(l.info(`タブ ${r.id} からの応答:`,e),"new_inquiry_found"===e.status?chrome.notifications.create({type:"basic",iconUrl:"../icons/icon128.png",title:"SokuCom電話連携",message:"新着のお問い合わせが見つかりました"}):"reloading"===e.status&&(l.info(`タブ ${r.id} はリロード中です。後ほどチェックします`),setTimeout((()=>{chrome.tabs.get(r.id,(e=>{chrome.runtime.lastError?l.warn(`タブ ${r.id} が存在しません: ${chrome.runtime.lastError.message}`):chrome.tabs.sendMessage(r.id,{action:"ping"},(e=>{!chrome.runtime.lastError&&e?(l.info(`タブ ${r.id} のリロード後、新着問い合わせを再チェックします`),chrome.tabs.sendMessage(r.id,{action:"checkNewInquiries"})):l.warn(`タブ ${r.id} に再接続できません: ${chrome.runtime.lastError?.message||"応答がありません"}`)}))}))}),5e3)))}))}))}catch(e){l.error(`タブ ${r.id} へのメッセージ送信エラー:`,e)}}catch(e){l.error("CMS更新エラー:",e)}}())}function k(e){try{N();const r=e/60,t=Math.max(r,1/60);chrome.alarms.create(a,{delayInMinutes:t,periodInMinutes:t}),l.info(`自動更新アラームを設定しました（${e}秒間隔）`),chrome.alarms.get(a,(e=>{e?l.debug(`アラーム設定確認: 次回発火時刻=${new Date(e.scheduledTime).toLocaleTimeString()}, 間隔=${e.periodInMinutes}分`):l.warn(`アラーム ${a} が見つかりませんでした`)}))}catch(e){l.error("自動更新アラーム設定エラー:",e)}}function N(){try{chrome.alarms.clear(a,(e=>{e&&l.info("自動更新アラームをクリアしました")}))}catch(e){l.error("自動更新アラームクリアエラー:",e)}}async function L(r){try{await async function(r){return d({[e]:r})}(r),l.info(`自動発信を${r?"有効":"無効"}にしました`)}catch(e){throw l.error("自動発信設定エラー:",e),e}}async function I(e){try{if(await async function(e){return d({[r]:e})}(e),e){const e=await h([t]);k(e.refreshInterval||10)}else N();l.info(`自動更新を${e?"有効":"無効"}にしました`)}catch(e){throw l.error("自動更新設定エラー:",e),e}}async function U(e){try{await async function(e){return d({[t]:e})}(e);!0===(await h([r])).autoRefreshEnabled&&k(e),l.info(`更新間隔を ${e} 秒に設定しました`)}catch(e){throw l.error("更新間隔設定エラー:",e),e}}async function A(e){try{await async function(e){return d({[o]:e})}(e),l.info("CMS設定を更新しました",e)}catch(e){throw l.error("CMS設定更新エラー:",e),e}}function D(e,r,t){l.debug("バックグラウンドスクリプトでメッセージを受信:",e,r);try{switch(e.action){case"ping":return function(e,r,t){t({status:"pong",message:"バックグラウンドスクリプトが応答しました",timestamp:Date.now()})}(0,0,t),!1;case"callPhoneAction":return function(e,r,t){if(l.info("電話発信アクションを受信しました",e),!e.phoneNumber)return void t({status:"error",message:"電話番号が指定されていません"});const n=y(e.phoneNumber);if(!n)return void t({status:"error",message:"無効な電話番号形式です"});e.autoCall?(b(n),t({status:"success",message:`電話番号 ${n} で発信処理を開始しました`,phoneNumber:n})):r.tab&&r.tab.id?(w(n,r.tab),t({status:"confirm",message:"発信確認ダイアログを表示しました",phoneNumber:n})):t({status:"error",message:"送信元タブの情報が取得できません"})}(e,r,t),!0;case"openSokuComTab":return function(e,r,t){if(l.info("SokuComタブを開いて電話発信するアクションを受信しました",e),!e.phoneNumber)return void t({status:"error",message:"電話番号が指定されていません"});const n=y(e.phoneNumber);if(!n)return void t({status:"error",message:"無効な電話番号形式です"});(async function(e){try{return await chrome.storage.local.set({[f]:e}),l.info("電話発信状態を設定しました: "+(e?"発信中":"通常状態")),!0}catch(e){return l.error("電話発信状態の設定に失敗しました:",e),!1}})(!0).then((()=>{b(n),setTimeout((()=>{g().then((e=>{e&&(l.warn("発信状態が30秒後も続いているため、強制リセットします"),async function(){try{return await chrome.storage.local.remove(f),l.info("電話発信状態をリセットしました"),!0}catch(e){return l.error("電話発信状態のリセットに失敗しました:",e),!1}}())}))}),3e4),t({status:"success",message:`電話番号 ${n} で発信処理を開始しました`,phoneNumber:n})})).catch((e=>{l.error("発信状態の設定に失敗しました:",e),b(n),t({status:"success",message:`電話番号 ${n} で発信処理を開始しました（状態管理エラー発生）`,phoneNumber:n})}))}(e,0,t),!0;case"toggleAutoCall":return async function(e,r){try{const t=Boolean(e.enabled);await L(t),r({status:"success",message:`自動発信を${t?"有効":"無効"}にしました`})}catch(e){l.error("自動発信設定エラー:",e),r({status:"error",message:`設定の更新に失敗しました: ${e.message||String(e)}`})}}(e,t),!0;case"toggleAutoRefresh":return async function(e,r){try{const t=Boolean(e.enabled);await I(t),r({status:"success",message:`自動更新を${t?"有効":"無効"}にしました`})}catch(e){l.error("自動更新設定エラー:",e),r({status:"error",message:`設定の更新に失敗しました: ${e.message||String(e)}`})}}(e,t),!0;case"setRefreshInterval":return async function(e,r){try{const t=Number(e.interval);if(isNaN(t)||t<=0)return void r({status:"error",message:"無効な更新間隔です"});await U(t),r({status:"success",message:`更新間隔を ${t} 秒に設定しました`})}catch(e){l.error("更新間隔設定エラー:",e),r({status:"error",message:`設定の更新に失敗しました: ${e.message||String(e)}`})}}(e,t),!0;case"updateCmsSettings":return async function(e,r){try{if(!e.settings||!Array.isArray(e.settings.targets))return void r({status:"error",message:"無効なCMS設定です"});await A(e.settings),r({status:"success",message:"CMS設定を更新しました"})}catch(e){l.error("CMS設定更新エラー:",e),r({status:"error",message:`設定の更新に失敗しました: ${e.message||String(e)}`})}}(e,t),!0;default:return l.warn("未知のメッセージアクション:",e.action),t({status:"error",message:"未知のアクションです"}),!1}}catch(e){return l.error("メッセージ処理エラー:",e),t({status:"error",message:`メッセージ処理中にエラーが発生しました: ${e.message||String(e)}`}),!1}}function P(){chrome.tabs.onRemoved.addListener(p),chrome.tabs.onUpdated.addListener(C)}async function x(){try{const a=await async function(){return h([e,r,t,o,n])}(),s={[e]:a.autoCallEnabled??!1,[r]:a.autoRefreshEnabled??!1,[t]:a.refreshInterval??10,[o]:a.cmsSettings??{targets:[{domain:"brand-satei.me",path:"/client/cv/",selector:"form#form_list > table"},{domain:"localhost",path:"/",selector:"div.inquiry-list > table"}]},[n]:a.callHistory??{}};await d(s),l.info("拡張機能の初期設定が完了しました"),P(),R()}catch(e){l.error("拡張機能の初期化に失敗しました:",e)}}chrome.runtime.onInstalled.addListener((e=>{l.info(`拡張機能イベント: ${e.reason}`),"install"===e.reason&&x(),function(){try{chrome.contextMenus.removeAll((()=>{chrome.contextMenus.create({id:s,title:"SokuComで発信する",contexts:["selection"],documentUrlPatterns:["*://*/*"]},(()=>{chrome.runtime.lastError?l.error("コンテキストメニュー作成エラー:",chrome.runtime.lastError):l.info("コンテキストメニューを作成しました")})),chrome.contextMenus.onClicked.removeListener($),chrome.contextMenus.onClicked.addListener($)}))}catch(e){l.error("コンテキストメニュー初期化エラー:",e)}}()})),chrome.runtime.onStartup.addListener((()=>{l.info("拡張機能が起動しました"),R()})),chrome.runtime.onMessage.addListener(((e,r,t)=>D(e,r,t))),P(),x(),l.info("バックグラウンドスクリプトが読み込まれました")})();